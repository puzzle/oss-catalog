---
import Layout from "../../../layouts/Layout.astro";
import SoftwareDetail from "../../../components/SoftwareDetail.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import  { type Lang, useTranslations} from "../../../i18n/utils";

const apiBaseUrl = import.meta.env.API_BASEURL || "http://localhost:3000/v1";
console.log("apiBaseUrl", apiBaseUrl)

export async function getStaticPaths() {
  const apiBaseUrl = import.meta.env.API_BASEURL || "http://localhost:3000/v1";

  console.log("apiBaseUrl in getStaticPaths", apiBaseUrl)
  const response = await fetch(`${apiBaseUrl}/software`);
  const data = await response.json();
  const softwares = data.data;

  return softwares.map((software) => {
    return {
      params: {
        id: software.id,
      },
    };
  });
}

const { id } = Astro.params;
const response = await fetch(`${apiBaseUrl}/software/${id}`);
const software = await response.json();

const lang = Astro.currentLocale as Lang;
const t = useTranslations(lang);
const homeUrl = getRelativeLocaleUrl(lang);
---

<style></style>

<Layout>
  <div class="container">
    <a
      href={homeUrl}
      type="false"
      class="btn btn--outline btn--sm btn--icon-left btn--back"
      aria-label="false"
      ><svg
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
        class="icon icon--base icon--ArrowLeft btn__icon"
        ><path
          xmlns="http://www.w3.org/2000/svg"
          d="m8.306 5.116-4.066 7.044 4.066 7.044.65-.375-3.633-6.294h15.187v-.75h-15.187l3.633-6.294z"
        ></path></svg
      ><span class="btn__text">{t('software.back')}</span></a
    >
  </div>
  <div class="container vertical-spacing">
    <h2 class="h2">{t('software.title')}</h2>
    <SoftwareDetail software={software} />
  </div>
</Layout>
